@page "/showcase/{contractAddress}/{loopheadNumber}/{tokenId}";
@using LoopheadsExplorer.Data;
@using LoopheadsExplorer.Models;
@inject EthereumService EthereumService;
@inject IpfsService IpfsService;
@inject RestService RestService;

<h1>Loophead #@loopheadNumber</h1>

@if(currentLoopheadMetadata != null)
{
    <h2>Current Variation</h2>
    <img src="@currentLoopheadImageLink" />
}
else
{
    <p>@statusText</p>
}
@code {
    [Parameter]
    public string contractAddress { get; set; }

    [Parameter]
    public string tokenId { get; set; }

    [Parameter]
    public string loopheadNumber { get; set;  }

    private string currentLoopheadMetadataLink { get; set; }

    private string ipfsGatewayUrl = "https://loopring.mypinata.cloud/ipfs/";

    private LoopheadMetadata currentLoopheadMetadata { get; set; }
    private string currentLoopheadImageLink { get; set; }

    private string statusText = "Retrieving metadata URI from smart contract...";

    protected override async Task OnParametersSetAsync()
    {
        currentLoopheadMetadataLink = await EthereumService.GetLoopheadMetadataLink(contractAddress, tokenId);
        if(!String.IsNullOrEmpty(currentLoopheadMetadataLink))
        {
            statusText = "Retrieved metadata URI, now retrieving metadata and image...";
            StateHasChanged();
            currentLoopheadMetadata = await IpfsService.GetLoopheadMetadata(currentLoopheadMetadataLink); 
            if(currentLoopheadMetadata != null)
            {
                currentLoopheadImageLink = ipfsGatewayUrl + currentLoopheadMetadata.image.Remove(0, 7);
            }
            else
            {
                statusText = "Image retrieval failed... try again";
            }
        }
        else
        {
            statusText = "Could not get metadata... try again";
        }  
        StateHasChanged();
    }
}
